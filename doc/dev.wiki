 = 开发环境搭建 =
 
梁健 - 最近更新于2015/7

%title 开发环境搭建
%toc

服务器共享软件的路径为 `\\server-pc\share\Software`, 请将以下`{SHARE_SVR}`替换成该地址。

== Windows开发环境 ==

=== 版本控制软件Git ===

安装git：
{{{
{SHARE_SVR}\Git\Git-1.9.5-preview20150319.exe
{SHARE_SVR}\Git\TortoiseGit-1.8.14.0-64bit.msi
}}}

浏览器右键点菜单 TortoiseGit->Settings->(左边菜单树中选择)Git->设置 Name 和 Email, 如
Name: liangjian
Email: liangjian@oliveche.com

在 Settings->Network 中，确认右侧 SSH Client 使用的是刚刚安装的Git中的ssh路径，如
{{{
C:\Program Files (x86)\Git\bin\ssh.exe
}}}

如果代码服务器不提供用户名密码登录，那么需要设置ssh证书登录方式：

在用户主目录下(开始->运行->输入 "." 或 "%userprofile%")创建目录".ssh", 将 `${SHARE_SVR}\server-pc-key` 目录下的文件(config, id_rsa等)拷贝到".ssh"目录中。
如果目前下已经有同名文件，请手工修改和合并。

在文件夹空白处点右键，打开 Git Bash，尝试 ssh 是否可以自动登录到代码服务器。

=== 服务器环境PHP === 

- 安装php 5.4
 {{{
解压 {SHARE_SVR}\php-5.4.31-nts-Win32-VC9-x86-xdebug.zip 到 c:\php54
 }}}
- 将解压路径如 c:\php54 加到系统环境变量 PATH 中(参考附注1)，以便可以直接在命令行访问 php.

=== 数据库MYSQL ===

办公室环境可直接使用配置好的数据库服务器。

为直接访问数据库，可以安装数据库客户端：
{{{
{SHARE_SVR}\MYSQL\MySQL_Front_Setup_v5.3.1765185107.exe
}}}

=== 浏览器及移动设备 ===

建议开发时使用chrome浏览器；请从网上下载并安装其最新版本。

主要测试环境包括：
- 安卓手机/平板
- 苹果手机
- 微信公众号

=== 编辑器 ===

建议安装上gvim编辑器。项目文档使用markdown或vimwiki格式，一般使用gvim编写.

{{{
{SHARE_SVR}\vim\gvim74.exe
}}}

建议安装到 `c:\vim`
安装完成后将 `{SHARE_SVR}\vim\_vimrc` 拷贝到安装目录， 如`c:\vim`

支持markdown格式文档编辑，参考 https://github.com/skyshore2001/vim-markdown

支持vimwiki格式文档编辑：
- 将{SHARE_SVR}\vim\vimwiki-lj-1.vmb拷贝到本地, 右键用gvim打开
- 运行安装命令
{{{
:so! %
}}}

安装后查看文档(如doc/*.wiki文件)就有颜色、折叠、生成html网页文档等功能。
使用vimwiki写文档，可参考[[writedoc_vimwiki]].

== 测试环境 ==

前提: 先配置好Windows开发环境(git/php等).

=== 安装perl ===

某些工具使用perl开发，所以应安装perl运行环境。
{{{
{SHARE_SVR}\ActivePerl-5.16.3.1604-MSWin32-x86-298023.msi
}}}

=== php单元测试工具phpunit ===

phpunit可用于对php服务端提供的接口进行测试.

安装 phpunit
- 新建目录 c:\bat 用于放置自已创建的批处理文件。将该目录c:\bat加到PATH环境变量（参考附注1）。
- 解压 `{SHARE_SVR}\php\phpunit.rar` 到c:\bat目录下，得到 c:\bat\phpunit.phar 文件
- 新建 phpunit.bat 文件，内容如下：
 {{{
@echo off
php c:/bat/phpunit.phar %*
 }}}

这时，打开一个cmd窗口，应该可以直接运行phpunit命令：
{{{
phpunit
}}}

具体用法请参考文档[[后端框架]] 章节"测试设计" -> "回归测试".

=== 安装前端自动化测试环境 ===

主要软件：nunit, selenium, VS.net (C#)

参考文档[[后端框架]]中的“回归测试”章节。

== 运行环境 ==

=== 下载代码 ===

项目中的代码库命名规则一般如下：

{project}:: H5手机应用、H5管理端应用以及服务端接口，其中子目录`server`包含发布到线上的内容的源码。一般克隆自筋斗云应用框架项目(jdcloud)。
{project}-online:: 发布版本库。由{project}下的server目录下内容经webcc编译系统优化生成。
{project}-app:: 原生手机应用程序（应用壳）的工程。基于Cordova框架，一般包含安卓及苹果两个应用程序的工程。一般克隆自jdcloud-app项目。
{project}-test:: 自动化回归测试代码

不再使用的：
{project}-xdk:: 原生手机应用程序（应用壳）的工程，使用Intel XDK工具生成应用程序，现已不使用，由{project}-app工程取代。
{project}-ios:: 原生iOS应用程序工程。
{project}-site:: 站点主页。

下载应用代码示例：
{{{
git clone builder@server-pc:xeyc
}}}
可以在浏览器中右键选择Git Clone, 然后输入地址：`builder@server-pc:xey`

=== 运行服务 ===

参考筋斗云教程。一般开发端配置使用IIS+php 5.4+。最简单可以直接这样将应用跑起来：
{{{
cd {project}\server
set P_DB=server-pc/carsvc_test
php -S 0.0.0.0:8080
}}}

访问：`http://localhost:8080/`

如果`server-pc`访问慢，请换成IP地址或在/etc/hosts/文件中指定地址-机器名映射。

文件C:\Windows\System32\drivers\etc\hosts，示例：
{{{
192.168.3.135	server-pc
}}}

=== H5应用惯例 ===

*[用户端 - 手机H5应用]*

http://localhost:8080/
或
http://localhost:8080/m2/index.html

*[员工端 - 手机H5应用]*

http://localhost:8080/m2/emp.html

*[商户端 - 手机H5应用]*

http://localhost:8080/m2/store.html

*[运营管理端 - 桌面H5应用]*

http://localhost:8080/web/store.html

*[超级管理端 - 桌面H5应用]*

http://localhost:8080/web/adm.html

